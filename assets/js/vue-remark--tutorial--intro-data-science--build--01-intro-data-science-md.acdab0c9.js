(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{833:function(t,e,a){"use strict";e.a={name:"VueRemarkRoot",render:function(t){return t("div",null,this.$slots.default)}}},834:function(t,e,a){"use strict";t.exports=function(t,e){return e||(e={}),"string"!=typeof(t=t&&t.__esModule?t.default:t)?t:(e.hash&&(t+=e.hash),e.maybeNeedQuotes&&/[\t\n\f\r "'=<>`]/.test(t)?'"'.concat(t,'"'):t)}},842:function(t,e,a){t.exports=a.p+"assets/img/model-workflow.b74b7608.png"},843:function(t,e,a){t.exports=a.p+"assets/img/spotify_site.3ab03734.png"},844:function(t,e,a){t.exports=a.p+"assets/img/plot-line.d28b1086.png"},845:function(t,e,a){t.exports=a.p+"assets/img/plot-weeknd-features.d5218ace.png"},846:function(t,e,a){t.exports=a.p+"assets/img/plot-hist.a52f1e0d.png"},847:function(t,e,a){t.exports=a.p+"assets/img/plot-point.70bbc6e5.png"},848:function(t,e,a){t.exports=a.p+"assets/img/plot-box.92610793.png"},849:function(t,e,a){t.exports=a.p+"assets/img/model-structure-code-1.36395380.png"},968:function(t,e){t.exports={type:"image",mimeType:"image/png",src:"/assets/static/01-intro-data-science_5_0.7e30bbf.38710ad5812c028757b6df89d641a235.png",size:{width:964,height:488},sizes:"(max-width: 964px) 100vw, 964px",srcset:["/assets/static/01-intro-data-science_5_0.82a2fbd.38710ad5812c028757b6df89d641a235.png 480w","/assets/static/01-intro-data-science_5_0.7e30bbf.38710ad5812c028757b6df89d641a235.png 964w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 964 488' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-a6ffa0f8457a001ff7729ca87a249acb'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-a6ffa0f8457a001ff7729ca87a249acb)' width='964' height='488' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAgCAYAAACinX6EAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAJXklEQVRo3s1ZyXIbyRHlL%2bov/Ae6O0I%2b%2bOKICZ98sGLs0XiTxheZtDW2pKFlabiIEIid2IEGuqt6w0ISILU856tG9TRIQBJF0uGOyOjq6upCZdbLl5mFDcj14cOH/zuxF9vv37/H27dv0/7s%2b%2bteGzc5Kae4qmS/w4ef1uF5Hra3t5HP57Gzs4ODgwNUq9WbN0B2wuvv2vWFu81rMplgd3cXg8EAzWYT5%2bfnmM1mt2eA4XAIrTXG4zHiODYyGo2u1FYqlnki2T1KnNzdyPQ73QDuMBT5qd9zY/h%2bJEpGpl%2bpCNPp1Czs7OwMrVbLPHNNWZe4yWvD7h4tzx/1fd8YgnKVtudp1I8UqhUPpaKLWk0hv99H6VUVxRcV5H9sobZXQ25rH8X9thlXLXvotD3kc0MUCx6OakOM4sgs7Pj4GA8ePIDruuh0OpcQeisuQKKhQlapIAjS9sf6tU7eRVGAMPQXEsg4GetrjCKN5u%2b%2bwbdf5eRZ3kl/OIoQj2MEYYgoTiQQiRe7TbjTBbj7dIesAW4UARcNYJWjhLI4%2b/zpfiocpmPS/iAw4zu//xqHz0vwxxPodgtesQBdP4I6qkEJ1FWtCjf/BlGva9ZC6N%2b7d0/cQhn3vDUDZCcl0VgFLip93XYgkI4nkUGA7jtGaX/owt3bh7u7A99T8BoNRMpLXWBra8twi%2bWFWzfAp1xA%2b4nfB7LbvvaXOMAqepEb0n7ZSfOstOy6AzcnBmj7GPz9X%2bh980gQ4GG430TkBWYtVPzu3btwHAe9Xu/2XYBkwwVGUZTsmAjbFu72bnxWfDcUsgqiUHw5Nr5rx9tv0/Hr%2bn32S1TYPhIkSL/M4Xvkizh1gc3NTTP%2b5OTk9g3w9u27S1HgEgkGPlRT4FvuQTUI40HSbg8EEQky9AXSXIUMf0GaNOZg89B8T2PyPXeeFzfkzp07JvkhCv53LrAgMk1SC6NF20/7VV%2bQ0hpCVXvwRGiQ4b%2brAuE%2bVKFjDOOH/me7hi%2b8QMOaucVNmFeszjIvp8o3YYyN7MP5fAo9bEING3A7r6GdEtSgBq/3RhQvyM65hu2j2VigK6wtioenY7N459EBdLEryq%2bOGqvI0fTrZZRYBNBtdvf2UKlUDBpWGeRGEMBF2B84O5sbJbXXFxFY6qE8e0JgvIsICXLBSwzPexzAeSgGqPTgj8LEHdZEBO62XqDKKE1i5bwXDBCLAcpSB1RrNXS7XZyenprIwDuTtlVo%2bBKjbDDXrtfrS2FQu6KIH6Zx3bqA1usSIek7TsjQQN1fHR1ovIhEyN1n4iRz2nYo/XQBa4BzSYTmEv%2bVfEce4DumxjSGrRdWoeGqRtjghIQZfziNAmGUiQKrWT0MwsusnhmTHR/KeCo7FMPkVA9F1UdBpOV7qOkBDryuaXOO0SITnM9nmIyVMSATIWaEnJPr5O%2bzL8k%2bozSV/xJ%2b2Gi328jlcmn6mbC0vlIq7Jvd1UmSk2X7Cy7gSX9HXKwvblUWN3vltdFVLpriYgNfLbnAfHaKaeiY71gNUtF%2bv5/Oz/qA%2bQHnXscPn3PesDGfz41fLbnAGgOs7aei3PF4BE1iW4h1h2wU4C5PxL0OvR7%2b4BQwpqv5CWII93gRBWbzU4kQjvmGHEXhGLoB3Zb9Nk2mgbiR7Gck43WRJ/i8ijuWosBHawEqxfYC0kk/Fy5hTBanymX4Qlha%2bMQrHEqW1zYcYpWjj1OikPeEC0Y2zHoCfxEt84xkrHWB0USlBmAuwN%2bkwtmIYUmcByic62oHOB/W1AIW0tYYfGamaEQWIOJLzs7IoALpCzwJk1Lg1EsYlnJQvaaM78MTv/YE8qwK%2b66HnqtEtLkPFZlfG8SwEFKlIlS3g1CKI14nsxO0xl0MnAGOjo7M7nL3a2JkQp%2bGoBvwmbvPvobUEuyjsUjsbPNbfkci5Xve%2bY4R5VIi9O7dO4FulIQkEpjstC9CiLNqG776D9yDfVlsAW6hiO6zQ%2bRf7mCvkEep2Ufu%2bXO8/PPXKLQc7JeLyA2KqAVN5MMSfugX8aRexE63jieNQ/zQPkRJl%2bDRkOI6NELv4Z8wWhQ%2bcwnJ0XFoEiP6PxdM4TPLY2atvJMc2cfU2T6Ty9hmCs07vyNSOI7vKXT91AXoG1QyJAxZprJEFdHlklFWy%2bJ0tWJg7e3toPvrX0Hl3qDxeBON7/6Cpihe%2b/5v6D59icGPefT2qlLu9lAuvMJe5Z8IqjJXo2p%2b40lJ/DdIzgyCKIkSgUA5kN13X2xjvDDAsZBgayI%2b32yhLO5VKBRQKpXMbr9%2b/frKcF/rArZBi87EYlrqccLcE%2bW913vQAyEigRf7DbEJE6tKGc4fH6Dz6D46lW30Xv4Vh/fvo/zVA3hPN4UDDhDJ94dvvseL2j8Q18U9GnUhOR%2b1vkoPUEJ7fkB3I9pkt9IoIOsJ5Zk7ReFucpfZ5lovEtqXnjwv1wJ0AZOfT6VO38Fg6zEC%2bVGTtUWxSY78QHKA07kUMG2EfR89v46nj3%2bG4bMX6D/6Du1f/BxeqSw1QUN21ZHq7thEBxsVYqbKmWiSDZtKEGgNcHI6Q1OPDcExTFsUUPmbTIuXToRIgob4uCAmO%2bNJkv6y/pewpZyqqQ18qRW0FlRIHPfcCrrOrqTAQ/S//S06v/kl3OIOdFty%2bPwrcYknUjxVktC4SHnX1Qg0hC2G5vMziRhTCdGJH1tftj5vC6frHpetPxIzO2Tz93BhANnZwZG4RdXcTVuM4jtJOxDGp4FUv4L%2bw/tSLUpEGIrBxFDGiJ84Ncoa4ORkjmZrlGZ9zFiJBsZ8jiX7k%2bUZ/m7MAESATTAodlFsa1PrE8Ysk2PTVpp5wUhQIKXxoJn068DI4NlTeB3hk3BkUms7ZzrfwgWy/VSGCieZ4Bmmepoepti4zzE0CA1FwxER1zktXjIAw6CFG4UQtaeyRtgWITLGY8Jv8W7M/waSpGY0is03UzHm5HiKsSw0GT9emnts5gmW%2btm2pz8z4ZnQSVyQSjO22ztjO9Nixn6KLY6%2b2ACrPqYx%2bGM2XqZnBqJYNuXMXhaOZr7Fojie0L1YwfF7wnoVqRkECAlOnCQDtUlN9g%2bSmyLCj/41tq6gWPUnBRdJKRaLaYGy6o/Oz53/XAxzLFFgKiiyLkIXyFZ%2bX1oBXum/wVXKrnomJIkYGoCLvUpVdpWjrnUGvZEjsXWL/pz%2bz1nop%2bb5FDJu4%2b/x/wKb6KLNXo9tzgAAAABJRU5ErkJggg==' /%3e%3c/svg%3e"}},969:function(t,e,a){var o=a(10),s=a(970).entries;o({target:"Object",stat:!0},{entries:function(t){return s(t)}})},970:function(t,e,a){var o=a(30),s=a(188),n=a(47),i=a(187).f,r=function(t){return function(e){for(var a,r=n(e),l=s(r),c=l.length,d=0,p=[];c>d;)a=l[d++],o&&!i.call(r,a)||p.push(t?[a,r[a]]:r[a]);return p}};t.exports={entries:r(!0),values:r(!1)}},987:function(t,e,a){"use strict";a.r(e);var o=a(9),s=a(834),n=a.n(s),i=a(842),r=a.n(i),l=a(843),c=a.n(l),d=a(845),p=a.n(d),u=a(844),h=a.n(u),f=a(846),m=a.n(f),g=a(847),b=a.n(g),y=a(848),v=a.n(y),x=a(849),w=a.n(x),A="<section none><section none> <h1 id=introduction-to-siuba>Introduction to siuba</h1> <aside class=notes> <p>Hi, I&#39;m Michael--the creator of siuba, a library for data analysis in Python.</p> <p>In this course, you&#39;ll use Python to explore and vizualize data.</p> <p>The course is designed for people who have never programmed before, and anyone interested in siuba!</p> </aside></section></section><section none><section none> <h1 id=data-analysis>Data Analysis</h1> <p><img src="+n()(r.a)+' alt=""></p> <aside class=notes> <p>Data analysis is the act of using data to produce effective communication. Communication that leads to meaningful action.</p> <p>In this course, we&#39;ll focus on one area of data analysis where siuba shines: transforming data.</p> <p>We&#39;ll also combine siuba with a library called plotnine to visualize data.</p> </aside></section></section><section none><section none> <h1 id=meet-the-data-spotify-top-200>Meet the data: Spotify top 200</h1> <p><img src='+n()(c.a)+' alt=""></p> <aside class=notes> <p>We&#39;ll use data that Spotify publishes every week on the top 200 songs in 62 different countries.</p> <p>You can check it out on <a href=https://spotifycharts.com/regional/global/weekly/latest target=_blank>spotifycharts.com</a></p> </aside></section></section><section none><section none> <h1 id=meet-the-data-spotify-top-200-1>Meet the data: Spotify top 200</h1> <pre><code class=language-python>music_top200</code></pre> <div> <style scoped>.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe thead th{text-align:right}</style><p></p> <table border=1 class=dataframe> <thead> <tr style=text-align:right> <th></th> <th>country</th> <th>position</th> <th>track_name</th> <th>artist</th> <th>streams</th> <th>duration</th> <th>continent</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>Argentina</td> <td>1</td> <td>Tusa</td> <td>KAROL G</td> <td>1858666</td> <td>200.960</td> <td>Americas</td> </tr> <tr> <th>1</th> <td>Argentina</td> <td>2</td> <td>Tattoo</td> <td>Rauw Alejandro</td> <td>1344382</td> <td>202.887</td> <td>Americas</td> </tr> <tr> <th>2</th> <td>Argentina</td> <td>3</td> <td>Hola - Remix</td> <td>Dalex</td> <td>1330011</td> <td>249.520</td> <td>Americas</td> </tr> <tr> <th>...</th> <td>...</td> <td>...</td> <td>...</td> <td>...</td> <td>...</td> <td>...</td> <td>...</td> </tr> <tr> <th>12397</th> <td>South Africa</td> <td>198</td> <td>Black And White</td> <td>Niall Horan</td> <td>11771</td> <td>193.090</td> <td>Africa</td> </tr> <tr> <th>12398</th> <td>South Africa</td> <td>199</td> <td>When I See U</td> <td>Fantasia</td> <td>11752</td> <td>217.347</td> <td>Africa</td> </tr> <tr> <th>12399</th> <td>South Africa</td> <td>200</td> <td>Psycho!</td> <td>MASN</td> <td>11743</td> <td>197.217</td> <td>Africa</td> </tr> </tbody> </table> <p>12400 rows × 7 columns</p> </div> <aside class=notes> <p>The data we&#39;ll use is held in a <strong>DataFrame</strong>. A DataFrame is a big table of data, made up of rows and columns. In the example below, the <strong>variable</strong> called <code>music_top200</code> lets us refer to and work on the data.</p> <p>Notice that in the bottom-left of the table, it shows the number of rows and columns. This data has 12,000 rows and 6 columns.</p> </aside></section></section><section none><section none> <h1 id=meet-the-data-spotify-song-features>Meet the data: Spotify song features</h1> <div style=width:70%> <p><img src='+n()(p.a)+' alt=""></p> </div> <aside class=notes> <p>Later in the course, we&#39;ll look at measures Spotify calculates for each song.</p> <p>Their measures for a song include:</p> <ul> <li>energy</li> <li>valence (how happy or positive)</li> <li>danceability</li> <li>speechiness</li> <li>acousticness</li> </ul> </aside></section></section><section none><section none> <h1 id=data-analysis-1>Data Analysis</h1> <div> <style scoped>.container{display:flex}.col{flex:1;height:450px}img{max-height:50%}</style> <div class=container height=450px> <div class=col width=50%> <img src='+n()(h.a)+"> <img src="+n()(m.a)+"> </div> <div class=col width=50%> <img src="+n()(b.a)+"> <img src="+n()(v.a)+"> </div> </div> </div> </section></section><section none><section none> <h1 id=how-code-is-structured>How code is structured</h1> <p><img src="+n()(w.a)+' alt=""></p> <aside class=notes> <p>Here is the first code we&#39;ll use in our analyses. It loads the tools we need from the siuba and plotnine libraries.</p> <p>It&#39;s said out loud as, &quot;from siuba import star&quot;.</p> </aside></section></section><section none><section none> <h1 id=lets-practice>Let&#39;s practice!</h1> </section></section>',k=(a(969),a(182)),_=a(471),I={props:["template","templateVars","locked","status","onExecute","onReady"],data:function(){return{formData:{},code:""}},beforeMount:function(){for(var t={},e=0,a=Object.entries(this.templateVars);e<a.length;e++){var o=Object(k.a)(a[e],2),s=o[0],n=o[1];t[s]=this.getFormEntryDefaults(n)}this.formData=t,this.setCodeFromTemplate()},computed:{templateRaw:function(){return void 0===this.template?Object(_.getPreCodeText)(this.$slots.default):this.template}},methods:{getFormEntryDefaults:function(t){return t.options[0]},setField:function(t,e){this.formData[t]=e,this.setCodeFromTemplate()},setCodeFromTemplate:function(){var t,e;this.code=(t=this.templateRaw,e=this.formData,new Function("return `".concat(t,"`;")).call(e))}}},E=Object(o.a)(I,(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",[t._l(t.templateVars,(function(e,o){return[a("label",[t._v(t._s(e.label))]),a("select",{on:{input:function(e){return t.setField(o,e.target.value)}}},t._l(e.options,(function(e){return a("option",{domProps:{value:e}},[t._v(t._s(e))])})),0)]})),a("CodeCell",t._b({model:{value:t.code,callback:function(e){t.code=e},expression:"code"}},"CodeCell",t.$props,!1))],2)}),[],!1,null,null,null).exports,O=a(833),T=a(7);function z(t){return(z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}T.a.config.optionMergeStrategies;var S={slides:A,CodeCellTemplater:E,VueRemarkRoot:O.a},X=function(t){var e=t.options.components=t.options.components||{},a=t.options.computed=t.options.computed||{};Object.keys(S).forEach((function(t){"object"===z(S[t])&&"function"==typeof S[t].render?e[t]=S[t]:a[t]=function(){return S[t]}}))},C=T.a.config.optionMergeStrategies,G="__vueRemarkFrontMatter",R={excerpt:null,title:"Course welcome",output:"html_document",editor_options:{chunk_output_type:"console"},chunk:"overview",exercise_pars:[{country:{label:"Country",options:["Mexico","United States"]}},{arrangeVar:{label:"Arrange rows by",options:["popularity","energy"]},popularity:{label:"Filter popularity",options:["> 50","> 90"]}},{artist:{label:"Artist",options:["The Weeknd","Bad Bunny","Roddy Ricch","ITZY","Justin Bieber"]},size:{label:"Point size",options:["popularity","acousticness","danceability"]}}]};var B=function(t){t.options[G]&&(t.options[G]=R),T.a.util.defineReactive(t.options,G,R),t.options.computed=C.computed({$frontmatter:function(){return t.options[G]}},t.options.computed)},F=Object(o.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("VueRemarkRoot",[o("Notebook",{attrs:{branch:"master",repo:"machow/purview",url:"https://mybinder.org",useBinder:"1"},scopedSlots:t._u([{key:"default",fn:function(e){return[o("details",{directives:[{name:"fix-codemirror",rawName:"v-fix-codemirror"}]},[o("code-cell",{attrs:{status:e.status,onExecute:e.execute,onReady:e.updateSetupCode,language:"python"}},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",{pre:!0,attrs:{class:"language-text"}},[t._v('# TODO: explain how to run this, and that they only need the gist (loads tools)\nimport pandas as pd\nfrom siuba import arrange, select, mutate, filter, _\nfrom plotnine import ggplot, geom_point, coord_flip, aes, labs, geom_text\n\n# temporary until I figure out where to put data\nfname = "https://siublocks.s3.us-east-2.amazonaws.com/course-data/music200.csv"\nmusic_top200 = pd.read_csv(fname)\n\n# tracks\nfname = "https://siublocks.s3.us-east-2.amazonaws.com/course-data/track_features.csv"\ntrack_features = pd.read_csv(fname)\n\n# TODO: shift into a package or file\nfrom siuba import pipe\nfrom IPython.display import HTML, display\n___ = pipe(lambda x: display(HTML("⚠️: <b>Don\'t forget to replace all the blanks!<b>")) and _)\n\npd.set_option("display.max_rows", 6)\n\nfrom IPython import get_ipython\n# special ipython function to get the html formatter\nhtml_formatter = get_ipython().display_formatter.formatters[\'text/html\']\n\n# when you see a Shout object, call the shout_html function on it\nhtml_formatter.for_type(pd.DataFrame, lambda df: df.to_html(classes = "dataframe", max_rows = pd.get_option("display.max_rows")))')])])])],1),o("RevealSlides",{attrs:{slides:t.slides}}),o("CodeCellTemplater",{attrs:{templateVars:t.$frontmatter.exercise_pars[0],status:e.status,onExecute:e.execute,onReady:e.updateSetupCode,language:"python"}},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",{pre:!0,attrs:{class:"language-text"}},[t._v('(music_top200\n  >> filter(_.country == "${this.country}")\n)')])])]),o("CodeCellTemplater",{attrs:{templateVars:t.$frontmatter.exercise_pars[1],status:e.status,onExecute:e.execute,onReady:e.updateSetupCode,language:"python"}},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",{pre:!0,attrs:{class:"language-text"}},[t._v("(track_features\n  >> filter(_.popularity ${this.popularity})\n  >> arrange(_.${this.arrangeVar})\n)")])])]),o("CodeCellTemplater",{attrs:{templateVars:{artist:{label:"Artist",options:["The Weeknd","Bad Bunny","Roddy Ricch","ITZY","Justin Bieber"]},size:{label:"Point size",options:["popularity","acousticness","danceability"]}},status:e.status,onExecute:e.execute,onReady:e.updateSetupCode,language:"python"}},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",{pre:!0,attrs:{class:"language-text"}},[t._v('(track_features\n  >> filter(_.artist == "${this.artist}")\n  >> ggplot(aes("energy", "valence", size = "${this.size}", color = "album", label = "track_name"))\n   + geom_point()\n   + geom_text(nudge_y = .05, size = 10)\n)')])])]),o("code-cell",{attrs:{status:e.status,onExecute:e.execute,language:"python"},scopedSlots:t._u([{key:"output",fn:function(){return[o("p",[o("g-image",{attrs:{src:a(968),alt:"png"}})],1),o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",{pre:!0,attrs:{class:"language-text"}},[t._v("<ggplot: (286917773)>")])])]},proxy:!0}],null,!0)},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",{pre:!0,attrs:{class:"language-text"}},[t._v('(track_features\n  >> filter(_.artist == "The Weeknd")\n  >> ggplot(aes("energy", "valence", size = "popularity", color = "album", label = "track_name"))\n   + geom_point()\n   + geom_text(nudge_y = .05, size = 10)\n)')])])])]}}])})],1)}),[],!1,null,null,null);"function"==typeof X&&X(F),"function"==typeof B&&B(F);e.default=F.exports}}]);