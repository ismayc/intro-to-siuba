(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{833:function(t,o,e){"use strict";o.a={name:"VueRemarkRoot",render:function(t){return t("div",null,this.$slots.default)}}},996:function(t,o,e){"use strict";e.r(o);var n=e(9),r=e(833),a=e(7);function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}a.a.config.optionMergeStrategies;var s={VueRemarkRoot:r.a},p=function(t){var o=t.options.components=t.options.components||{},e=t.options.computed=t.options.computed||{};Object.keys(s).forEach((function(t){"object"===i(s[t])&&"function"==typeof s[t].render?o[t]=s[t]:e[t]=function(){return s[t]}}))},u=a.a.config.optionMergeStrategies,c="__vueRemarkFrontMatter",l={excerpt:null,title:"group_by",output:"html_document",editor_options:{chunk_output_type:"console"},chunk:"summarize"};var m=function(t){t.options[c]&&(t.options[c]=l),a.a.util.defineReactive(t.options,c,l),t.options.computed=u.computed({$frontmatter:function(){return t.options[c]}},t.options.computed)},f=Object(n.a)({},(function(){var t=this,o=t.$createElement,e=t._self._c||o;return e("VueRemarkRoot",[e("Notebook",{attrs:{branch:"master",repo:"machow/purview",url:"https://mybinder.org",useBinder:"1"},scopedSlots:t._u([{key:"default",fn:function(o){return[e("h1",{attrs:{id:"the-group_by-verb"}},[e("a",{attrs:{href:"#the-group_by-verb","aria-hidden":"true"}},[e("span",{staticClass:"icon icon-link"})]),t._v("The group_by verb")]),e("details",{directives:[{name:"fix-codemirror",rawName:"v-fix-codemirror"}]},[e("code-cell",{attrs:{status:o.status,onExecute:o.execute,onReady:o.updateSetupCode,language:"python"}},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",{pre:!0,attrs:{class:"language-text"}},[t._v('# TODO: explain how to run this, and that they only need the gist (loads tools)\nimport pandas as pd\nfrom siuba import arrange, select, mutate, filter, _\nfrom plotnine import ggplot, geom_point, coord_flip, aes, labs\n\n# temporary until I figure out where to put data\nurl = "https://siublocks.s3.us-east-2.amazonaws.com/music_top200.csv"\nmusic_top200 = pd.read_csv(url)\n\n\n# TODO: shift into a package or file\nfrom siuba import pipe\nfrom IPython.display import HTML, display\n___ = pipe(lambda x: display(HTML("⚠️: <b>Don\'t forget to replace all the blanks!</b>")) and _)\n\npd.set_option("display.max_rows", 6)\n\nfrom IPython import get_ipython\n# special ipython function to get the html formatter\nhtml_formatter = get_ipython().display_formatter.formatters[\'text/html\']\n\n# when you see a Shout object, call the shout_html function on it\nhtml_formatter.for_type(pd.DataFrame, lambda df: df.to_html(classes = "dataframe", max_rows = pd.get_option("display.max_rows")))')])])])],1),e("h2",{attrs:{id:"group_by"}},[e("a",{attrs:{href:"#group_by","aria-hidden":"true"}},[e("span",{staticClass:"icon icon-link"})]),t._v("group_by")])]}}])})],1)}),[],!1,null,null,null);"function"==typeof p&&p(f),"function"==typeof m&&m(f);o.default=f.exports}}]);