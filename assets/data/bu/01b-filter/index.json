{"hash":"9c8627c9f3554101f557dc705cac6613fdc7d11e","data":{"metadata":{"siteName":"Siuba tutorials","siteDescription":""},"post":{"id":"d305fd1cb7451c6c52ef4ddce237b3a2","title":"Filter","content":"\n<Notebook\n  v-slot=\"nb\"\n  branch=\"master\"\n  repo=\"machow/purview\"\n  url=\"https://mybinder.org\"\n  useBinder=\"1\"\n  >\n\n\n# Filter\n\n\n<details v-fix-codemirror>\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\" :onReady=\"nb.updateSetupCode\" language=\"python\">\n\n\n    # TODO: explain how to run this, and that they only need the gist (loads tools)\n    import pandas as pd\n    from siuba import arrange, select, mutate, filter, _\n    from plotnine import ggplot, geom_point, coord_flip, aes, labs\n    \n    # temporary until I figure out where to put data\n    cols_to_drop = [\"track_id\", \"\"]\n    url = \"https://siublocks.s3.us-east-2.amazonaws.com/music_top200.csv\"\n    music_top200 = pd.read_csv(url)[[\"country\", \"country_code\", \"position\", \"track_name\", \"artist\", \"streams\", \"duration_ms\"]]\n    \n    # tracks\n    track_features = pd.read_csv(\"/Users/machow/Dropbox/Repo/siublocks-org/intro-tidyverse/tutorial/track_features.csv\")\n    \n    # TODO: shift into a package or file\n    from siuba import pipe\n    from IPython.display import HTML, display\n    from siututor import Blank\n    ___ = Blank()\n    \n    pd.set_option(\"display.max_rows\", 6)\n    \n    from IPython import get_ipython\n    # special ipython function to get the html formatter\n    html_formatter = get_ipython().display_formatter.formatters['text/html']\n    \n    # when you see a Shout object, call the shout_html function on it\n    html_formatter.for_type(pd.DataFrame, lambda df: df.to_html(max_rows = pd.get_option(\"display.max_rows\")))\n\n\n\n\n</code-cell>\n</details>\n\nimport slides from './slides/01-slides-code.html'\n\n<RevealSlides :slides=\"slides\" />\n### Exercise 1: \n\n* replace name in filter, who is the top artist? How many streams do they have?\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  language=\"python\">\n\n\n    (music_top200\n      >> filter(_.country == \"Mexico\")\n    )\n\n\n<template v-slot:output>\n\n\n\n\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>country</th>\n      <th>country_code</th>\n      <th>position</th>\n      <th>track_name</th>\n      <th>artist</th>\n      <th>streams</th>\n      <th>duration_ms</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>7817</th>\n      <td>Mexico</td>\n      <td>mx</td>\n      <td>1</td>\n      <td>Safaera</td>\n      <td>Bad Bunny</td>\n      <td>7948565</td>\n      <td>295177.0</td>\n    </tr>\n    <tr>\n      <th>7818</th>\n      <td>Mexico</td>\n      <td>mx</td>\n      <td>2</td>\n      <td>Si Veo a Tu Mamá</td>\n      <td>Bad Bunny</td>\n      <td>7535381</td>\n      <td>170972.0</td>\n    </tr>\n    <tr>\n      <th>7819</th>\n      <td>Mexico</td>\n      <td>mx</td>\n      <td>3</td>\n      <td>La Difícil</td>\n      <td>Bad Bunny</td>\n      <td>5459673</td>\n      <td>163084.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>8014</th>\n      <td>Mexico</td>\n      <td>mx</td>\n      <td>198</td>\n      <td>Vete Ya</td>\n      <td>Valentín Elizalde</td>\n      <td>559399</td>\n      <td>157760.0</td>\n    </tr>\n    <tr>\n      <th>8015</th>\n      <td>Mexico</td>\n      <td>mx</td>\n      <td>199</td>\n      <td>El Mundo a Tus Pies</td>\n      <td>Grupo Firme</td>\n      <td>559065</td>\n      <td>176227.0</td>\n    </tr>\n    <tr>\n      <th>8016</th>\n      <td>Mexico</td>\n      <td>mx</td>\n      <td>200</td>\n      <td>Verte Ir</td>\n      <td>DJ Luian</td>\n      <td>558925</td>\n      <td>267500.0</td>\n    </tr>\n  </tbody>\n</table>\n\n\n\n</template>\n\n</code-cell>\n\n\n### Exercise 2: \n\n* Filter to keep songs in the 5th `position`.\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  language=\"python\">\n\n\n    (music_top200\n      >> filter(___)\n    )\n\n\n<template v-slot:output>\n\n\n\n\n⚠️: <b>Don't forget to replace all the blanks!</b>\n\n\n\n</template>\n\n</code-cell>\n\n\nTODO: MCQ - Which artist does it say is 5th in the UK?\n\n### Exercise 3:\n\n* What are the top 5 songs in the United States?\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  language=\"python\">\n\n\n    (music_top200\n      >> filter(___, ___)\n    )\n\n\n<template v-slot:output>\n\n\n\n\n⚠️: <b>Don't forget to replace all the blanks!</b>\n\n\n\n</template>\n\n</code-cell>\n\n\n### Exercise 4: looking at The Weeknd's streams\n\nHow many times has The Weeknd had over 1,000,000 streams?\n\n<details>\n    <summary>Hint:</summary>\n    Do in steps. Run first to get all rows where the artist is The Weeknd, and then modify your code to get where he has over 1,000,000 streams.\n</details>\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  language=\"python\">\n\n\n    (\n    \n    )\n\n\n<template v-slot:output>\n\n\n\n\n    ()\n\n\n\n</template>\n\n</code-cell>\n\n\n\n</Notebook>\n\n","chunk":"basics"},"allPosts":{"edges":[{"node":{"id":"c07baa2fd37433b322b7f771f1fbf360","path":"/intro-data-science/","title":"","chunk":"","headings":[],"fileInfo":{"directory":"intro-data-science"}},"next":{"path":"/intro-data-science/build/01-intro-data-science/"},"previous":null},{"node":{"id":"652e7785105c1207d315c249131f5b7f","path":"/intro-data-science/build/01-intro-data-science/","title":"Course welcome","chunk":"overview","headings":[],"fileInfo":{"directory":"intro-data-science/build"}},"next":{"path":"/intro-data-science/build/01b-filter/"},"previous":{"path":"/intro-data-science/"}},{"node":{"id":"ba1582d1c6d27a522e11b03b97dff7b9","path":"/intro-data-science/build/01b-filter/","title":"Filter","chunk":"basics","headings":[],"fileInfo":{"directory":"intro-data-science/build"}},"next":{"path":"/intro-data-science/build/01c-arrange/"},"previous":{"path":"/intro-data-science/build/01-intro-data-science/"}},{"node":{"id":"ad19f602c352dfe1d79fefe29da15f7d","path":"/intro-data-science/build/01c-arrange/","title":"Arrange","chunk":"basics","headings":[],"fileInfo":{"directory":"intro-data-science/build"}},"next":{"path":"/intro-data-science/build/01d-mutate/"},"previous":{"path":"/intro-data-science/build/01b-filter/"}},{"node":{"id":"ab23fa24aeb29459d678ca42733d0864","path":"/intro-data-science/build/01d-mutate/","title":"Mutate","chunk":"basics","headings":[],"fileInfo":{"directory":"intro-data-science/build"}},"next":{"path":"/intro-data-science/build/01f-wrap-up/"},"previous":{"path":"/intro-data-science/build/01c-arrange/"}},{"node":{"id":"cce2a731d9223cc9c35f6ffb69ea5176","path":"/intro-data-science/build/01f-wrap-up/","title":"Wrap up","chunk":"basics","headings":[{"value":"Putting it together","anchor":"#putting-it-together"},{"value":"Exercises","anchor":"#exercises"}],"fileInfo":{"directory":"intro-data-science/build"}},"next":{"path":"/intro-data-science/readme/"},"previous":{"path":"/intro-data-science/build/01d-mutate/"}},{"node":{"id":"8b3cd3b360b88a353088b673cfcd8a66","path":"/intro-data-science/readme/","title":"","chunk":"","headings":[],"fileInfo":{"directory":"intro-data-science"}},"next":null,"previous":{"path":"/intro-data-science/build/01f-wrap-up/"}}]}},"context":{}}