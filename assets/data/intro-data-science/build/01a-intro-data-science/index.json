{"hash":"9c8627c9f3554101f557dc705cac6613fdc7d11e","data":{"metadata":{"siteName":"Siuba tutorials","siteDescription":""},"post":{"id":"169f44c80d01985cbe2b39a0e1e304ec","title":"Meet the data","content":"\n<Notebook\n  v-slot=\"nb\"\n  branch=\"master\"\n  repo=\"machow/purview\"\n  url=\"https://mybinder.org\"\n  useBinder=\"1\"\n  >\n\n\n# Introduction to Data Analysis with Siuba: Basics\n\n\n<details v-fix-codemirror v-show=\"nb.debut\">\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\" :onReady=\"nb.updateSetupCode\" language=\"python\">\n\n\n    # TODO: explain how to run this, and that they only need the gist (loads tools)\n    import pandas as pd\n    from siuba import arrange, select, mutate, filter, _\n    from plotnine import ggplot, geom_point, coord_flip, aes, labs\n    \n    # temporary until I figure out where to put data\n    fname = \"https://siublocks.s3.us-east-2.amazonaws.com/course-data/music200.csv\"\n    music_top200 = pd.read_csv(fname)\n    \n    # tracks\n    fname = \"https://siublocks.s3.us-east-2.amazonaws.com/course-data/track_features.csv\"\n    track_features = pd.read_csv(fname)\n    \n    \n    # TODO: shift into a package or file\n    from siuba import pipe\n    from IPython.display import HTML, display\n    ___ = pipe(lambda x: display(HTML(\"‚ö†Ô∏è: <b>Don't forget to replace all the blanks!<b>\")) and _)\n    \n    pd.set_option(\"display.max_rows\", 6)\n    \n    from IPython import get_ipython\n    # special ipython function to get the html formatter\n    html_formatter = get_ipython().display_formatter.formatters['text/html']\n    \n    # when you see a Shout object, call the shout_html function on it\n    html_formatter.for_type(pd.DataFrame, lambda df: df.to_html(classes = \"dataframe\", max_rows = pd.get_option(\"display.max_rows\")))\n\n\n\n\n</code-cell>\n</details>\n\nimport slides from '../slides/01a-slides.markdown'\n\n<RevealSlides :slides=\"slides\" />\n\n\n## Introduction to Spotify data\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  language=\"python\">\n\n\n    #from IPython.display import HTML, display\n    music_top200\n\n\n<template v-slot:output>\n\n\n\n\n<table border=\"1\" class=\"dataframe dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>country</th>\n      <th>position</th>\n      <th>track_name</th>\n      <th>artist</th>\n      <th>streams</th>\n      <th>duration</th>\n      <th>continent</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Argentina</td>\n      <td>1</td>\n      <td>Tusa</td>\n      <td>KAROL G</td>\n      <td>1858666</td>\n      <td>200.960</td>\n      <td>Americas</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Argentina</td>\n      <td>2</td>\n      <td>Tattoo</td>\n      <td>Rauw Alejandro</td>\n      <td>1344382</td>\n      <td>202.887</td>\n      <td>Americas</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Argentina</td>\n      <td>3</td>\n      <td>Hola - Remix</td>\n      <td>Dalex</td>\n      <td>1330011</td>\n      <td>249.520</td>\n      <td>Americas</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>12397</th>\n      <td>South Africa</td>\n      <td>198</td>\n      <td>Black And White</td>\n      <td>Niall Horan</td>\n      <td>11771</td>\n      <td>193.090</td>\n      <td>Africa</td>\n    </tr>\n    <tr>\n      <th>12398</th>\n      <td>South Africa</td>\n      <td>199</td>\n      <td>When I See U</td>\n      <td>Fantasia</td>\n      <td>11752</td>\n      <td>217.347</td>\n      <td>Africa</td>\n    </tr>\n    <tr>\n      <th>12399</th>\n      <td>South Africa</td>\n      <td>200</td>\n      <td>Psycho!</td>\n      <td>MASN</td>\n      <td>11743</td>\n      <td>197.217</td>\n      <td>Africa</td>\n    </tr>\n  </tbody>\n</table>\n\n\n\n</template>\n\n</code-cell>\n\n\n> üîé How many streams did the track named Blinding lights get this week?\n\n> üîé How many rows in the 12,417 row DataFrame are being shown above?\n\n> üîé What is the speechiness level of the track named Myron?\n\n<details>\n    <summary>show answers</summary>\n\n    * Blinding lights was streamed 7744570 times.\n    * 10 rows are being shown from the DataFrame\n    * The track named Myron has a speechiness of 0.29\n</details>\n    \n\n## What you'll learn to do\n\nIn this tutorial you will learn about..\n\n* data that is represented in table called a DataFrame.\n* how to arrange rows and select columns.\n* how to create new columns and cut out specific rows.\n\nThe next two examples show what you'll be able to do by the end of this chapter.\nIt's okay if the code doesn't make sense yet.\nJust being able to run someone else's code goes a long way!\n\n\n### Big example 1: finding high energy hits\n\nRun the code below. It should do the following:\n\n* **arrange** the rows--first by position (lowest first), and second by energy (highest first).\n* **select** specific columns, such as country, position, and artist.\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  language=\"python\">\n\n\n    (music_top200\n      >> arrange(_.position, _.duration)\n      >> select(_.country, _.position, _.artist, _.track_name, _.duration)\n    )\n\n\n<template v-slot:output>\n\n\n\n\n<table border=\"1\" class=\"dataframe dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>country</th>\n      <th>position</th>\n      <th>artist</th>\n      <th>track_name</th>\n      <th>duration</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2600</th>\n      <td>Germany</td>\n      <td>1</td>\n      <td>Ufo361</td>\n      <td>Bad Girls, Good Vibes</td>\n      <td>107.446</td>\n    </tr>\n    <tr>\n      <th>4400</th>\n      <td>Greece</td>\n      <td>1</td>\n      <td>Snik</td>\n      <td>Drip</td>\n      <td>147.429</td>\n    </tr>\n    <tr>\n      <th>2000</th>\n      <td>Colombia</td>\n      <td>1</td>\n      <td>J Balvin</td>\n      <td>Rojo</td>\n      <td>150.720</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>11999</th>\n      <td>Uruguay</td>\n      <td>200</td>\n      <td>Callejeros</td>\n      <td>Creo</td>\n      <td>289.760</td>\n    </tr>\n    <tr>\n      <th>3999</th>\n      <td>Finland</td>\n      <td>200</td>\n      <td>Eminem</td>\n      <td>Without Me</td>\n      <td>290.320</td>\n    </tr>\n    <tr>\n      <th>4399</th>\n      <td>United Kingdom</td>\n      <td>200</td>\n      <td>TOTO</td>\n      <td>Africa</td>\n      <td>295.893</td>\n    </tr>\n  </tbody>\n</table>\n\n\n\n</template>\n\n</code-cell>\n\n\nTry doing the actions below, and then running the code.\n\n> üî® Try changing the two uses of `_.energy` above to `_.danciness`.\n\n### Big example 2: which countries does an artist have hits in?\n\nRun the code below. It should do the following:\n\n* **filter** to keep rows for the artist ITZY\n* use **ggplot** to add a point for each row in the filtered data.\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  language=\"python\">\n\n\n    (music_top200\n      >> filter(_.artist == \"ITZY\")\n      >> ggplot(aes(\"streams\", \"country\")) + geom_point() + labs(title = \"ITZY hits across countries\")\n    )\n\n\n<template v-slot:output>\n\n\n![png](./01a-intro-data-science_files/01a-intro-data-science_11_0.png)\n\n\n\n\n\n    <ggplot: (300819555)>\n\n\n\n</template>\n\n</code-cell>\n\n\n> üî® Try changing the term `\"ITZY\"` to `\"TIX\"`. How many countries have TIX hits?\n\n> üî® Try stopping the plot with a comment. That is, put `#` to the left of `>> ggplot`. This should show you the raw data.\n\n<details>\n    <summary>solution</summary>\n\nHere is the solution code...\n    \n```python\n# code with artist changed, and plot commented out\n(music_top200\n  >> filter(_.artist == \"TIX\")\n  #>> ggplot(aes(\"streams\", \"country\")) + geom_point() + labs(title = \"ITZY hits across countries\")\n)\n```\n\n</details>\n\n\n</Notebook>\n\n","chunk":"basics"},"allPosts":{"edges":[{"node":{"id":"c07baa2fd37433b322b7f771f1fbf360","path":"/intro-data-science/","title":"","chunk":"","headings":[],"fileInfo":{"directory":"intro-data-science"}},"next":{"path":"/intro-data-science/build/01-intro-data-science/"},"previous":null},{"node":{"id":"652e7785105c1207d315c249131f5b7f","path":"/intro-data-science/build/01-intro-data-science/","title":"Course welcome","chunk":"overview","headings":[],"fileInfo":{"directory":"intro-data-science/build"}},"next":{"path":"/intro-data-science/build/01b-filter/"},"previous":{"path":"/intro-data-science/"}},{"node":{"id":"ba1582d1c6d27a522e11b03b97dff7b9","path":"/intro-data-science/build/01b-filter/","title":"Filter","chunk":"basics","headings":[],"fileInfo":{"directory":"intro-data-science/build"}},"next":{"path":"/intro-data-science/build/01c-arrange/"},"previous":{"path":"/intro-data-science/build/01-intro-data-science/"}},{"node":{"id":"ad19f602c352dfe1d79fefe29da15f7d","path":"/intro-data-science/build/01c-arrange/","title":"Arrange","chunk":"basics","headings":[],"fileInfo":{"directory":"intro-data-science/build"}},"next":{"path":"/intro-data-science/build/01d-mutate/"},"previous":{"path":"/intro-data-science/build/01b-filter/"}},{"node":{"id":"ab23fa24aeb29459d678ca42733d0864","path":"/intro-data-science/build/01d-mutate/","title":"Mutate","chunk":"basics","headings":[],"fileInfo":{"directory":"intro-data-science/build"}},"next":{"path":"/intro-data-science/build/01f-wrap-up/"},"previous":{"path":"/intro-data-science/build/01c-arrange/"}},{"node":{"id":"cce2a731d9223cc9c35f6ffb69ea5176","path":"/intro-data-science/build/01f-wrap-up/","title":"Wrap up","chunk":"basics","headings":[{"value":"Putting it together","anchor":"#putting-it-together"},{"value":"Exercises","anchor":"#exercises"}],"fileInfo":{"directory":"intro-data-science/build"}},"next":{"path":"/intro-data-science/readme/"},"previous":{"path":"/intro-data-science/build/01d-mutate/"}},{"node":{"id":"8b3cd3b360b88a353088b673cfcd8a66","path":"/intro-data-science/readme/","title":"","chunk":"","headings":[],"fileInfo":{"directory":"intro-data-science"}},"next":null,"previous":{"path":"/intro-data-science/build/01f-wrap-up/"}}]}},"context":{}}