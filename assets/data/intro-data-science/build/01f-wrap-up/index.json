{"hash":"05b9ce112ea9d60ad5aa941683300f6ea20a4f15","data":{"metadata":{"siteName":"Siuba tutorials","siteDescription":""},"post":{"id":"cce2a731d9223cc9c35f6ffb69ea5176","title":"Wrap up","content":"\n<Notebook\n  v-slot=\"nb\"\n  branch=\"master\"\n  repo=\"machow/purview\"\n  url=\"https://mybinder.org\"\n  useBinder=\"1\"\n  useStorage=\"1\"\n  >\n\n\n<details v-fix-codemirror v-show=\"nb.debut\">\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\" :onReady=\"nb.updateSetupCode\" language=\"python\">\n\n\n    # TODO: explain how to run this, and that they only need the gist (loads tools)\n    import pandas as pd\n    from siuba import arrange, select, mutate, filter, _\n    from plotnine import ggplot, geom_point, coord_flip, aes, labs\n    \n    # temporary until I figure out where to put data\n    fname = \"https://siublocks.s3.us-east-2.amazonaws.com/course-data/music200.csv\"\n    music_top200 = pd.read_csv(fname)\n    \n    # tracks\n    fname = \"https://siublocks.s3.us-east-2.amazonaws.com/course-data/track_features.csv\"\n    track_features = pd.read_csv(fname)\n    \n    \n    # TODO: shift into a package or file\n    from siututor import Blank\n    ___ = Blank()\n    # from siuba import pipe\n    # from IPython.display import HTML, display\n    # ___ = pipe(lambda x: display(HTML(\"⚠️: <b>Don't forget to replace all the blanks!<b>\")) and _)\n    \n    pd.set_option(\"display.max_rows\", 6)\n    \n    from IPython import get_ipython\n    # special ipython function to get the html formatter\n    html_formatter = get_ipython().display_formatter.formatters['text/html']\n    \n    # when you see a Shout object, call the shout_html function on it\n    html_formatter.for_type(pd.DataFrame, lambda df: df.to_html(max_rows = pd.get_option(\"display.max_rows\")))\n\n\n\n\n</code-cell>\n</details>\n\n\n### Putting it together (WORK IN PROGRESS)\n\nTODO: this will be slides explaining importing and comments. Student should be able to produce a valid python file that someone (with python experience) could run.\n\nImporting is how you get the data (like `music_top200`) and verbs into Python.\n\n```python\nfrom siuba import *\nfrom plotnine import *\n\nfrom music_top200 import *\n```\n\nComments mean that you can start a line with `#` to ignore all the code in it\n\n```python\n# this is just a helpful message\n# the code below here won't run\n# music_top200\n```\n\n### Exercise 1:\n\nThe code below imports everything from siuba.\n\n* Add lines to import everything from `plotnine` and `music_top200` as well.\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  language=\"python\">\n\n\n    from siuba import *\n    \n    \n\n\n\n\n</code-cell>\n\n\n### Exercise 2:\n\nFor the artist with the top track in Spain, what country has the most streams for one of their tracks?\n\nNote: you may need to code multiple times.\n\n<details>\n  <summary>hint</summary>\n    \n  > First, find the artist in the top position in Spain. After, can you get only that artists tracks? Once you do that you should be close!\n    \n</details>\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  language=\"python\">\n\n\n    (\n        \n    )\n\n\n<template v-slot:output>\n\n\n\n\n    ()\n\n\n\n</template>\n\n</code-cell>\n\n\n### Exercise 3:\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  language=\"python\">\n\n\n    (music_top200\n      >> mutate(___)\n      >> mutate(stream_seconds = ___)\n      # >> ggplot(aes(\"stream_seconds\", \"position\", color = \"duration\"))\n      # + geom_point()\n    )\n\n\n<template v-slot:output>\n\n\n\n\n⚠️: <b>Don't forget to replace all the blanks!</b>\n\n\n\n</template>\n\n</code-cell>\n\n\n\n</Notebook>\n\n","chunk":"basics"},"allPosts":{"edges":[{"node":{"id":"c07baa2fd37433b322b7f771f1fbf360","path":"/intro-data-science/","title":"","chunk":"","headings":[],"fileInfo":{"directory":"intro-data-science"}},"next":{"path":"/intro-data-science/build/01-intro-data-science/"},"previous":null},{"node":{"id":"652e7785105c1207d315c249131f5b7f","path":"/intro-data-science/build/01-intro-data-science/","title":"Course welcome","chunk":"overview","headings":[],"fileInfo":{"directory":"intro-data-science/build"}},"next":{"path":"/intro-data-science/build/01b-filter/"},"previous":{"path":"/intro-data-science/"}},{"node":{"id":"ba1582d1c6d27a522e11b03b97dff7b9","path":"/intro-data-science/build/01b-filter/","title":"Filter","chunk":"basics","headings":[],"fileInfo":{"directory":"intro-data-science/build"}},"next":{"path":"/intro-data-science/build/01c-arrange/"},"previous":{"path":"/intro-data-science/build/01-intro-data-science/"}},{"node":{"id":"ad19f602c352dfe1d79fefe29da15f7d","path":"/intro-data-science/build/01c-arrange/","title":"Arrange","chunk":"basics","headings":[],"fileInfo":{"directory":"intro-data-science/build"}},"next":{"path":"/intro-data-science/build/01d-mutate/"},"previous":{"path":"/intro-data-science/build/01b-filter/"}},{"node":{"id":"ab23fa24aeb29459d678ca42733d0864","path":"/intro-data-science/build/01d-mutate/","title":"Mutate","chunk":"basics","headings":[],"fileInfo":{"directory":"intro-data-science/build"}},"next":{"path":"/intro-data-science/build/01f-wrap-up/"},"previous":{"path":"/intro-data-science/build/01c-arrange/"}},{"node":{"id":"cce2a731d9223cc9c35f6ffb69ea5176","path":"/intro-data-science/build/01f-wrap-up/","title":"Wrap up","chunk":"basics","headings":[],"fileInfo":{"directory":"intro-data-science/build"}},"next":{"path":"/intro-data-science/readme/"},"previous":{"path":"/intro-data-science/build/01d-mutate/"}},{"node":{"id":"8b3cd3b360b88a353088b673cfcd8a66","path":"/intro-data-science/readme/","title":"","chunk":"","headings":[],"fileInfo":{"directory":"intro-data-science"}},"next":null,"previous":{"path":"/intro-data-science/build/01f-wrap-up/"}}]}},"context":{}}